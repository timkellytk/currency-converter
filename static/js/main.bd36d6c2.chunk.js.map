{"version":3,"sources":["theme/GlobalStyles.js","data/currenciesData.js","theme/constants.js","components/QuickQuoteLayout.js","components/Button.js","pages/QuickQuote.js","utilities/formatNumber.js","pages/QuickQuoteResult.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","CURRENCY_OPTIONS","COLORS","SPACING","StyledContainer","styled","div","QuickQuoteContainer","ContentContainer","props","contentBgColour","StyledHeading","h1","BlueDivider","QuickQuoteLayout","children","defaultProps","StyledButton","Button","FormSection","bgColour","FormDivider","TwoInputGrid","StyledFormField","Form","Field","SubmitContainer","TelephoneContainer","PhoneDropdown","Dropdown","StyledPhoneDropdown","QuickQuote","firstName","firstNameError","lastName","lastNameError","email","countryCode","phone","fromCurrency","toCurrency","currencyValue","currencyValueError","handleFirstNameChange","handleLastNameChange","handleEmailChange","handleCountryCodeChange","handlePhoneChange","handleFromCurrencyChange","handleToCurrencyChange","handleCurrencyValueChange","handleSubmit","size","onSubmit","required","Input","error","fluid","label","id","placeholder","value","onChange","htmlFor","search","selection","options","countryCodes","type","countryOptions","formatNumber","num","toString","replace","ResultContainer","SmallHeading","p","ExchangeRateHeading","h3","CurrencyHeading","h4","ButtonContainer","withRouter","location","params","queryString","parse","parseInt","useState","customerRate","setCustomerRate","useEffect","fetch","then","response","json","data","CustomerRate","fromCurrencyFormatted","toFixed","toCurrencyValue","toCurrencyFormatted","Result","Error","as","Link","to","App","setFirstName","setLastName","setEmail","setCountryCode","setPhone","setFromCurrency","setToCurrency","setCurrencyValue","setFirstNameError","setLastNameError","setCurrencyValueError","validName","name","length","validCurrencyValue","amount","history","useHistory","path","event","newFirstName","target","newLastName","e","newCurrencyValue","preventDefault","validForm","isFormValid","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.bd36d6c2.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport '@fontsource/open-sans';\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tfont-family: \"Open Sans\";\n\t}\n`;\n\nexport default GlobalStyle;\n","const CURRENCY_OPTIONS = [\n    {\n        \"text\": \"EUR - Euro\",\n        \"key\": \"eu\",\n        \"value\": \"EUR\",\n        \"symbol\": \"€\"\n\t},\n\t{\n\t\t\"text\": \"GBP - British Pound Sterling\",\n\t\t\"key\": \"gb\",\n\t\t\"value\": \"GBP\",\n\t\t\"symbol\": \"£\"\n\t},\n\t{\n\t\t\"text\": \"AUD - Australian Dollar\",\n\t\t\"key\": \"au\",\n\t\t\"value\": \"AUD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"NZD - New Zealand Dollar\",\n\t\t\"key\": \"nz\",\n\t\t\"value\": \"NZD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"USD - United States Dollar\",\n\t\t\"key\": \"us\",\n\t\t\"value\": \"USD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"CAD - Canadian Dollar\",\n\t\t\"key\": \"ca\",\n\t\t\"value\": \"CAD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"CHF - Swiss Franc\",\n\t\t\"key\": \"ch\",\n\t\t\"value\": \"CHF\",\n\t\t\"symbol\": \"₣\"\n\t},\n\t{\n\t\t\"text\": \"JPY - Japanese Yen\",\n\t\t\"key\": \"jp\",\n\t\t\"value\": \"JPY\",\n\t\t\"symbol\": \"¥\"\n\t},\n\t{\n\t\t\"text\": \"BGN - Bulgarian Lev\",\n\t\t\"key\": \"bg\",\n\t\t\"value\": \"BGN\",\n\t\t\"symbol\": \"лв\"\n\t},\n\t{\n\t\t\"text\": \"ILS - Israeli New Sheqel\",\n\t\t\"key\": \"il\",\n\t\t\"value\": \"ILS\",\n\t\t\"symbol\": \"₪\"\n\t},\n\t{\n\t\t\"text\": \"RUB - Russian Ruble\",\n\t\t\"key\": \"ru\",\n\t\t\"value\": \"RUB\",\n\t\t\"symbol\": \"₽\"\n\t},\n\t{\n\t\t\"text\": \"PHP - Philippine Peso\",\n\t\t\"key\": \"ph\",\n\t\t\"value\": \"PHP\",\n\t\t\"symbol\": \"₱\"\n\t},\n\t{\n\t\t\"text\": \"ZAR - South African Rand\",\n\t\t\"key\": \"za\",\n\t\t\"value\": \"ZAR\",\n\t\t\"symbol\": \"R\"\n\t},\n\t{\n\t\t\"text\": \"TRY - Turkish Lira\",\n\t\t\"key\": \"tr\",\n\t\t\"value\": \"TRY\",\n\t\t\"symbol\": \"₤\"\n\t},\n\t{\n\t\t\"text\": \"HKD - Hong Kong Dollar\",\n\t\t\"key\": \"hk\",\n\t\t\"value\": \"HKD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"MYR - Malaysian Ringgit\",\n\t\t\"key\": \"my\",\n\t\t\"value\": \"MYR\",\n\t\t\"symbol\": \"RM\"\n\t},\n\t{\n\t\t\"text\": \"THB - Thai Baht\",\n\t\t\"key\": \"th\",\n\t\t\"value\": \"THB\",\n\t\t\"symbol\": \"฿\"\n\t},\n\t{\n\t\t\"text\": \"HRK - Croatian Kuna\",\n\t\t\"key\": \"hr\",\n\t\t\"value\": \"HRK\",\n\t\t\"symbol\": \"Kn\"\n\t},\n\t{\n\t\t\"text\": \"NOK - Norwegian Krone\",\n\t\t\"key\": \"no\",\n\t\t\"value\": \"NOK\",\n\t\t\"symbol\": \"kr\"\n\t},\n\t{\n\t\t\"text\": \"IDR - Indonesian Rupiah\",\n\t\t\"key\": \"id\",\n\t\t\"value\": \"IDR\",\n\t\t\"symbol\": \"Rp\"\n\t},\n\t{\n\t\t\"text\": \"DKK - Danish Krone\",\n\t\t\"key\": \"dk\",\n\t\t\"value\": \"DKK\",\n\t\t\"symbol\": \"kr\"\n\t},\n\t{\n\t\t\"text\": \"CZK - Czech Republic Koruna\",\n\t\t\"key\": \"cz\",\n\t\t\"value\": \"CZK\",\n\t\t\"symbol\": \"Kč\"\n\t},\n\t{\n\t\t\"text\": \"HUF - Hungarian Forint\",\n\t\t\"key\": \"hu\",\n\t\t\"value\": \"HUF\",\n\t\t\"symbol\": \"Ft\"\n\t},\n\t{\n\t\t\"text\": \"MXN - Mexican Peso\",\n\t\t\"key\": \"mx\",\n\t\t\"value\": \"MXN\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"KRW - South Korean Won\",\n\t\t\"key\": \"kr\",\n\t\t\"value\": \"KRW\",\n\t\t\"symbol\": \"₩\"\n\t},\n\t{\n\t\t\"text\": \"ISK - Icelandic Kr\\u00f3na\",\n\t\t\"key\": \"is\",\n\t\t\"value\": \"ISK\",\n\t\t\"symbol\": \"Kr\"\n\t},\n\t{\n\t\t\"text\": \"SGD - Singapore Dollar\",\n\t\t\"key\": \"sg\",\n\t\t\"value\": \"SGD\",\n\t\t\"symbol\": \"$\"\n\t},\n\t{\n\t\t\"text\": \"BRL - Brazilian Real\",\n\t\t\"key\": \"br\",\n\t\t\"value\": \"BRL\",\n\t\t\"symbol\": \"R$\"\n\t},\n\t{\n\t\t\"text\": \"PLN - Polish Zloty\",\n\t\t\"key\": \"pl\",\n\t\t\"value\": \"PLN\",\n\t\t\"symbol\": \"zł\"\n\t},\n\t{\n\t\t\"text\": \"INR - Indian Rupee\",\n\t\t\"key\": \"in\",\n\t\t\"value\": \"INR\",\n\t\t\"symbol\": \"₹\"\n\t},\n\t{\n\t\t\"text\": \"RON - Romanian Leu\",\n\t\t\"key\": \"ro\",\n\t\t\"value\": \"RON\",\n\t\t\"symbol\": \"L\"\n\t},\n\t{\n\t\t\"text\": \"CNY - Chinese Yuan\",\n\t\t\"key\": \"cn\",\n\t\t\"value\": \"CNY\",\n\t\t\"symbol\": \"¥\"\n\t},\n\t{\n\t\t\"text\": \"SEK - Swedish Krona\",\n\t\t\"key\": \"se\",\n\t\t\"value\": \"SEK\",\n\t\t\"symbol\": \"kr\"\n\t}\n]\n\nexport default CURRENCY_OPTIONS;","export const COLORS = {\n  borderGray: 'lightgray',\n  bgGray: '#f9f9f9',\n  green: '#08b68a',\n  primary: '#057db1',\n};\n\nexport const SPACING = {\n  xs: '5px',\n  sm: '10px',\n  md: '20px',\n  lg: '30px',\n  xl: '40px',\n  xxl: '50px',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { COLORS, SPACING } from '../theme/constants';\n\nconst StyledContainer = styled.div`\n  margin: 5% 7.5%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst QuickQuoteContainer = styled.div`\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst ContentContainer = styled.div`\n  border: ${COLORS.borderGray} 1px solid;\n  border-radius: 2px;\n  background-color: ${(props) => props.contentBgColour};\n`;\n\nconst StyledHeading = styled.h1`\n  font-size: 3em;\n  font-weight: 400;\n`;\n\nconst BlueDivider = styled.div`\n  background-color: ${COLORS.primary};\n  height: 1px;\n  width: 100%;\n  margin-bottom: ${SPACING.md};\n`;\n\nconst QuickQuoteLayout = ({ children, contentBgColour }) => (\n  <StyledContainer>\n    <QuickQuoteContainer>\n      <StyledHeading>Quick Quote</StyledHeading>\n      <BlueDivider />\n      <ContentContainer contentBgColour={contentBgColour}>\n        {children}\n      </ContentContainer>\n    </QuickQuoteContainer>\n  </StyledContainer>\n);\n\nQuickQuoteLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  contentBgColour: PropTypes.string,\n};\n\nQuickQuoteLayout.defaultProps = {\n  contentBgColour: null,\n};\n\nexport default QuickQuoteLayout;\n","import styled from 'styled-components';\nimport { Button } from 'semantic-ui-react';\nimport { COLORS } from '../theme/constants';\n\nconst StyledButton = styled(Button)`\n  &&&&& {\n    padding: 20px 90px;\n    border-radius: 40px;\n    text-transform: uppercase;\n    font-size: 20px;\n    font-weight: lighter;\n    background-color: ${COLORS.primary};\n    color: white;\n\n    @media (max-width: 600px) {\n      padding: 20px 50px;\n      font-size: 16px;\n    }\n  }\n`;\n\nexport default StyledButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Form, Dropdown } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport countryCodes from '../data/countryCodes.json';\nimport countryOptions from '../data/currenciesData';\nimport QuickQuoteLayout from '../components/QuickQuoteLayout';\nimport Button from '../components/Button';\nimport { COLORS, SPACING } from '../theme/constants';\n\nconst FormSection = styled.div`\n  padding: ${SPACING.lg};\n  background-color: ${(props) => props.bgColour};\n\n  @media (max-width: 600px) {\n    padding: ${SPACING.md};\n  }\n`;\n\nconst FormDivider = styled.div`\n  height: 1px;\n  background-color: ${COLORS.borderGray};\n`;\n\nconst TwoInputGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 1.5em;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n    margin-bottom: ${SPACING.md};\n  }\n`;\n\nconst StyledFormField = styled(Form.Field)`\n  &&&&& {\n    label {\n      margin-bottom: ${SPACING.sm};\n      font-weight: 400;\n    }\n  }\n`;\n\nconst SubmitContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${SPACING.lg};\n`;\n\nconst TelephoneContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PhoneDropdown = styled(Dropdown)`\n  &&& {\n    background-color: ${COLORS.bgGray};\n  }\n`;\n\nconst StyledPhoneDropdown = styled(PhoneDropdown)`\n  &&&& {\n    min-width: 100px;\n  }\n`;\n\nconst QuickQuote = ({\n  firstName,\n  firstNameError,\n  lastName,\n  lastNameError,\n  email,\n  countryCode,\n  phone,\n  fromCurrency,\n  toCurrency,\n  currencyValue,\n  currencyValueError,\n  handleFirstNameChange,\n  handleLastNameChange,\n  handleEmailChange,\n  handleCountryCodeChange,\n  handlePhoneChange,\n  handleFromCurrencyChange,\n  handleToCurrencyChange,\n  handleCurrencyValueChange,\n  handleSubmit,\n}) => (\n  <QuickQuoteLayout>\n    <Form size=\"big\" onSubmit={handleSubmit}>\n      <FormSection>\n        <TwoInputGrid>\n          <StyledFormField required>\n            <Form.Input\n              error={firstNameError ? 'Please enter your first name' : false}\n              fluid\n              label=\"First name\"\n              id=\"first-name\"\n              placeholder=\"First name\"\n              value={firstName}\n              onChange={handleFirstNameChange}\n            />\n          </StyledFormField>\n          <StyledFormField required>\n            <Form.Input\n              error={lastNameError ? 'Please enter your last name' : false}\n              fluid\n              id=\"last-name\"\n              label=\"Last name\"\n              placeholder=\"Last name\"\n              value={lastName}\n              onChange={handleLastNameChange}\n            />\n          </StyledFormField>\n        </TwoInputGrid>\n        <StyledFormField>\n          <Form.Input\n            label=\"Email\"\n            placeholder=\"joe@schmoe.com\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n        </StyledFormField>\n        <StyledFormField>\n          <label htmlFor=\"mobile\">Telephone / Mobile</label>\n          <TelephoneContainer>\n            <StyledPhoneDropdown\n              value={countryCode}\n              onChange={handleCountryCodeChange}\n              search\n              selection\n              options={countryCodes}\n            />\n            <input\n              placeholder=\"420 316 322\"\n              type=\"tel\"\n              id=\"mobile\"\n              value={phone}\n              onChange={handlePhoneChange}\n            />\n          </TelephoneContainer>\n        </StyledFormField>\n      </FormSection>\n      <FormDivider />\n      <FormSection bgColour={COLORS.bgGray}>\n        <TwoInputGrid>\n          <StyledFormField required>\n            <label htmlFor=\"from-currency\">From Currency</label>\n            <Dropdown\n              fluid\n              search\n              selection\n              value={fromCurrency}\n              onChange={handleFromCurrencyChange}\n              options={countryOptions}\n            />\n          </StyledFormField>\n          <StyledFormField required>\n            <label htmlFor=\"to-currency\">To Currency</label>\n            <Dropdown\n              fluid\n              search\n              selection\n              value={toCurrency}\n              onChange={handleToCurrencyChange}\n              options={countryOptions}\n            />\n          </StyledFormField>\n        </TwoInputGrid>\n        <TwoInputGrid>\n          <StyledFormField required>\n            <Form.Input\n              error={\n                currencyValueError\n                  ? 'Please enter an amount greater than 0'\n                  : false\n              }\n              fluid\n              type=\"number\"\n              id=\"amount\"\n              label=\"Amount\"\n              value={currencyValue}\n              onChange={handleCurrencyValueChange}\n            />\n          </StyledFormField>\n        </TwoInputGrid>\n        <SubmitContainer>\n          <Button type=\"submit\">Get Quote</Button>\n        </SubmitContainer>\n      </FormSection>\n    </Form>\n  </QuickQuoteLayout>\n);\n\nQuickQuote.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  firstNameError: PropTypes.bool.isRequired,\n  lastName: PropTypes.string.isRequired,\n  lastNameError: PropTypes.bool.isRequired,\n  email: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  fromCurrency: PropTypes.string.isRequired,\n  toCurrency: PropTypes.string.isRequired,\n  currencyValue: PropTypes.number.isRequired,\n  currencyValueError: PropTypes.bool.isRequired,\n  handleFirstNameChange: PropTypes.func.isRequired,\n  handleLastNameChange: PropTypes.func.isRequired,\n  handleEmailChange: PropTypes.func.isRequired,\n  handleCountryCodeChange: PropTypes.func.isRequired,\n  handlePhoneChange: PropTypes.func.isRequired,\n  handleFromCurrencyChange: PropTypes.func.isRequired,\n  handleToCurrencyChange: PropTypes.func.isRequired,\n  handleCurrencyValueChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default QuickQuote;\n","function formatNumber(num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport default formatNumber;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport queryString from \"query-string\";\nimport PropTypes from \"prop-types\";\nimport QuickQuoteLayout from \"../components/QuickQuoteLayout\";\nimport Button from \"../components/Button\";\nimport formatNumber from \"../utilities/formatNumber\";\nimport { COLORS, SPACING } from \"../theme/constants\";\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: ${SPACING.xl} ${SPACING.md};\n`;\n\nconst SmallHeading = styled.p`\n  font-size: 2em;\n  font-weight: lighter;\n  margin-bottom: ${SPACING.xs};\n`;\n\nconst ExchangeRateHeading = styled.h3`\n  color: ${COLORS.green};\n  font-size: 4.5em;\n  font-weight: lighter;\n  margin-bottom: ${SPACING.md};\n  margin-top: ${SPACING.sm};\n`;\n\nconst CurrencyHeading = styled.h4`\n  font-size: 2.8em;\n  font-weight: lighter;\n  margin-top: 0px;\n\n  span {\n    color: ${COLORS.primary};\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 80px;\n`;\n\nconst QuickQuoteResult = ({ location }) => {\n  const params = queryString.parse(location.search);\n  const fromCurrency = params.fromCurrency || \"AUD\";\n  const toCurrency = params.toCurrency || \"GBP\";\n  const currencyValue = parseInt(params.currencyValue, 10) || 0;\n  const [customerRate, setCustomerRate] = useState(0);\n\n  useEffect(() => {\n    fetch(\n      `https://api.ofx.com/PublicSite.ApiService/OFX/spotrate/Individual/${fromCurrency}/${toCurrency}/${currencyValue}?format=json`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.customerRate !== customerRate) {\n          setCustomerRate(data.CustomerRate);\n        }\n      });\n  }, [customerRate, fromCurrency, toCurrency, currencyValue]);\n\n  const fromCurrencyFormatted = formatNumber(currencyValue.toFixed(2));\n  const toCurrencyValue = currencyValue * customerRate;\n  const toCurrencyFormatted = formatNumber(toCurrencyValue.toFixed(2));\n\n  const Result = () => (\n    <>\n      <SmallHeading id=\"quote-success\">OFX Customer Rate</SmallHeading>{\" \"}\n      <ExchangeRateHeading id=\"customer-rate\">{customerRate}</ExchangeRateHeading>\n      <div>\n        <SmallHeading>From</SmallHeading>\n        <CurrencyHeading id=\"from-currency\">\n          {fromCurrency} <span>{fromCurrencyFormatted}</span>\n        </CurrencyHeading>\n        <SmallHeading>To</SmallHeading>\n        <CurrencyHeading id=\"to-currency\">\n          {toCurrency} <span>{toCurrencyFormatted}</span>\n        </CurrencyHeading>\n      </div>\n    </>\n  );\n\n  const Error = () => (\n    <SmallHeading id=\"quote-error\">\n      Error: OFX Does Not Convert Money To {toCurrency}\n    </SmallHeading>\n  );\n\n  return (\n    <QuickQuoteLayout contentBgColour=\"#fbfbfb\">\n      <ResultContainer>\n        {toCurrencyValue ? <Result /> : <Error />}\n\n        <ButtonContainer>\n          <Button as={Link} to=\"/\">\n            Start New Quote\n          </Button>\n        </ButtonContainer>\n      </ResultContainer>\n    </QuickQuoteLayout>\n  );\n};\n\nQuickQuoteResult.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(QuickQuoteResult);\n","import React, { useState } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport GlobalStyle from './theme/GlobalStyles';\nimport QuickQuote from './pages/QuickQuote';\nimport QuickQuoteResult from './pages/QuickQuoteResult';\n\nfunction App() {\n  /* Form State */\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [countryCode, setCountryCode] = useState('+61');\n  const [phone, setPhone] = useState('');\n  const [fromCurrency, setFromCurrency] = useState('AUD');\n  const [toCurrency, setToCurrency] = useState('GBP');\n  const [currencyValue, setCurrencyValue] = useState(25000);\n\n  /* Form Error State */\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastNameError, setLastNameError] = useState(false);\n  const [currencyValueError, setCurrencyValueError] = useState(false);\n\n  const validName = (name) => name.length > 0;\n  const validCurrencyValue = (amount) => amount > 0;\n\n  /* Form Handling */\n  const handleFirstNameChange = (event) => {\n    const newFirstName = event.target.value;\n\n    setFirstName(newFirstName);\n    if (validName(newFirstName)) {\n      setFirstNameError(false);\n    } else {\n      setFirstNameError(true);\n    }\n  };\n  const handleLastNameChange = (event) => {\n    const newLastName = event.target.value;\n\n    setLastName(newLastName);\n    if (validName(newLastName)) {\n      setLastNameError(false);\n    } else {\n      setLastNameError(true);\n    }\n  };\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n  const handleCountryCodeChange = (event) => {\n    setCountryCode(event.target.value);\n  };\n  const handlePhoneChange = (event) => {\n    setPhone(event.target.value);\n  };\n  const handleFromCurrencyChange = (e, { value }) => setFromCurrency(value);\n  const handleToCurrencyChange = (e, { value }) => setToCurrency(value);\n  const handleCurrencyValueChange = (event) => {\n    const newCurrencyValue = event.target.value;\n    setCurrencyValue(newCurrencyValue);\n    if (validCurrencyValue(newCurrencyValue)) {\n      setCurrencyValueError(false);\n    } else {\n      setCurrencyValueError(true);\n    }\n  };\n\n  /* Form Submit Handling */\n  const isFormValid = () => {\n    let validForm = true;\n    if (!validName(firstName)) {\n      setFirstNameError(true);\n      validForm = false;\n    }\n    if (!validName(lastName)) {\n      setLastNameError(true);\n      validForm = false;\n    }\n    if (!validCurrencyValue(currencyValue)) {\n      setCurrencyValueError(true);\n      validForm = false;\n    }\n    return validForm;\n  };\n\n  const history = useHistory();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (isFormValid()) {\n      history.push(\n        `/result?fromCurrency=${fromCurrency}&toCurrency=${toCurrency}&currencyValue=${currencyValue}`\n      );\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/result\">\n          <QuickQuoteResult />\n        </Route>\n        <Route path=\"/\">\n          <QuickQuote\n            firstName={firstName}\n            firstNameError={firstNameError}\n            lastName={lastName}\n            lastNameError={lastNameError}\n            email={email}\n            countryCode={countryCode}\n            phone={phone}\n            fromCurrency={fromCurrency}\n            toCurrency={toCurrency}\n            currencyValue={currencyValue}\n            currencyValueError={currencyValueError}\n            handleFirstNameChange={handleFirstNameChange}\n            handleLastNameChange={handleLastNameChange}\n            handleEmailChange={handleEmailChange}\n            handleCountryCodeChange={handleCountryCodeChange}\n            handlePhoneChange={handlePhoneChange}\n            handleFromCurrencyChange={handleFromCurrencyChange}\n            handleToCurrencyChange={handleToCurrencyChange}\n            handleCurrencyValueChange={handleCurrencyValueChange}\n            handleSubmit={handleSubmit}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'normalize.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// To measure performance, log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}